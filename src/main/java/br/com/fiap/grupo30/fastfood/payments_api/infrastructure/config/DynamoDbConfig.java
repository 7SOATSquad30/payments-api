package br.com.fiap.grupo30.fastfood.payments_api.infrastructure.config;

import java.net.URI;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import software.amazon.awssdk.auth.credentials.AwsBasicCredentials;
import software.amazon.awssdk.auth.credentials.AwsSessionCredentials;
import software.amazon.awssdk.auth.credentials.StaticCredentialsProvider;
import software.amazon.awssdk.enhanced.dynamodb.DynamoDbEnhancedClient;
import software.amazon.awssdk.enhanced.dynamodb.extensions.AutoGeneratedTimestampRecordExtension;
import software.amazon.awssdk.regions.Region;
import software.amazon.awssdk.services.dynamodb.DynamoDbClient;

@Configuration
public class DynamoDbConfig {

    @Value("${spring.cloud.aws.endpoint.override:#{null}}")
    private String overrideAwsEndpoint;

    @Value("${spring.cloud.aws.credentials.access-key}")
    private String accessKeyId;

    @Value("${spring.cloud.aws.credentials.secret-key}")
    private String secretAccessKey;

    @Value("${spring.cloud.aws.credentials.session-token:#{null}}")
    private String sessionToken;

    @Value("${spring.cloud.aws.region.static}")
    private String region;

    @Bean
    public DynamoDbClient dynamoDbClient() {
        StaticCredentialsProvider credentialsProvider =
                sessionToken != null
                        ? StaticCredentialsProvider.create(
                                AwsSessionCredentials.create(
                                        accessKeyId, secretAccessKey, sessionToken))
                        : StaticCredentialsProvider.create(
                                AwsBasicCredentials.create(accessKeyId, secretAccessKey));

        var builder =
                DynamoDbClient.builder()
                        .credentialsProvider(credentialsProvider)
                        .region(Region.of(region));

        if (overrideAwsEndpoint != null) {
            builder.endpointOverride(URI.create(overrideAwsEndpoint));
        }

        return builder.build();
    }

    @Bean
    public DynamoDbEnhancedClient dynamoDbEnhancedClient(@Autowired DynamoDbClient dynamoDbClient) {
        return DynamoDbEnhancedClient.builder()
                .dynamoDbClient(dynamoDbClient)
                .extensions(AutoGeneratedTimestampRecordExtension.builder().build())
                .build();
    }
}
